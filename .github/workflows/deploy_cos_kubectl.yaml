name: Deploy COS YAMLs with kubectl

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

jobs:
  deploy-cos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kubeconfig_secret_name: [HIRO_KUBE_CONFIG_AWS]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets[matrix.kubeconfig_secret_name] }}" > $HOME/.kube/${{ matrix.kubeconfig_secret_name }}
          chmod 600 $HOME/.kube/${{ matrix.kubeconfig_secret_name }}

      - name: Debug kubeconfig
        run: |
            ls -l $HOME/.kube
            cat $HOME/.kube/${{ matrix.kubeconfig_secret_name }} || true
            
      - name: Set kubectl dry-run flag
        id: kubectl-dry-run
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "flag=" >> $GITHUB_OUTPUT
          else
            echo "flag=--dry-run=client" >> $GITHUB_OUTPUT
          fi

      - name: Deploy COS YAMLs using kubectl
        env:
          COS_NAMESPACE: ${{ vars.COS_NAMESPACE }}
          KUBE_CONFIG_PATH: $HOME/.kube/${{ matrix.kubeconfig_secret_name }}
        run: |
          if [ -z "$COS_NAMESPACE" ]; then
            echo "COS_NAMESPACE variable is not set"
            exit 1
          fi
          ls -larth
          cat ${KUBE_CONFIG_PATH}
          kubectl create namespace "$COS_NAMESPACE" --dry-run=client --kubeconfig "$KUBE_CONFIG_PATH" -o yaml | kubectl apply --kubeconfig "$KUBE_CONFIG_PATH" -f -
          kubectl apply ${{ steps.kubectl-dry-run.outputs.flag }} --kubeconfig "$KUBE_CONFIG_PATH" -n "$COS_NAMESPACE" -f ./cos/out_rendered_tamplate_cos.yaml

      - name: Clean up
        run: rm -rf $HOME/.kube/${{ matrix.kubeconfig_secret_name }}