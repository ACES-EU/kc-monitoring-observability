prometheus:
  image: prom/prometheus:latest
  service:
    name: prometheus-service

nats:
  image: nats:latest

cadvisor:
  image: gcr.io/cadvisor/cadvisor:v0.49.1
  containerPort: 8080

kubeStateMetrics:
  image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.16.0
  service:
    name: kube-state-metrics
    port: 8080
    targetPort: 8080

prometheusNatsAdapter:
  image: anejvovcakjob/aces:prometheus-nats-adapter
  natsUrl: nats://nats-server:4222
  natsStream: prometheus
  natsSubject: metrics
  service:
    name: prometheus-nats-adapter

aggregationService:
  image: anejvovcakjob/aces:aggregation-service-jvm
  natsUrl: nats://nats-server:4222
  natsStream: prometheus
  natsInputSubjectPrefix: metrics
  natsOutputSubjectPrefix: aggregated_metrics

grafana:
  image: grafana/grafana:latest
  gFSecurityAdminUser: admin
  gFSecurityAdminPassword: admin
  mountPaths:
    storage: /var/lib/grafana
    datasource: /etc/grafana/provisioning/datasources
    config: /etc/grafana
    dashboardProviders: /etc/grafana/provisioning/dashboards
    # dashboards: /var/lib/grafana/dashboards
    dashboards: /tmp/dashboards
  service:
    name: grafana
    port: 3000
    targetPort: 3000
    nodePort: 30005
  
nginxReverseProxy:
  image: nginx:latest
  configMapName: nginx-reverse-proxy-config
  service:
    port: 8080
    targetPort: 8080
    nodePort: 30000

ottelCollector:
  image: otel/opentelemetry-collector-contrib:latest
  configMapName: otel-collector-config
  configMapDataKey: otel-collector-config.yaml
  port: 8888
  volumeMountPath: /etc/otel-collector-config.yaml
  volumeMountSubPath: otel-collector-config.yaml

quarkusApp1:
  image: anejvovcakjob/aces:microservice-demo
  containerPort: 8080
  customersApiUrl: http://quarkus-app-2:8083/v1
  port: 8082
  targetPort: 8080

quarkusApp2:
  image: anejvovcakjob/aces:microservice-demo
  containerPort: 8080
  customersApiUrl: http://quarkus-app-3:8084/v1
  port: 8083
  targetPort: 8080

quarkusApp3:
  image: anejvovcakjob/aces:microservice-demo
  containerPort: 8080
  customersApiUrl: http://quarkus-app-1:8082/v1
  port: 8084
  targetPort: 8080

prometheusScrapeServices:
  # Scrape Quarkus Applications
  - job_name: 'quarkus-apps'
    metrics_path: /v1/metrics
    static_configs:
      - targets:
          - 'quarkus-app-1:8082'
          - 'quarkus-app-2:8083'
          - 'quarkus-app-3:8084'
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.+):.+'
        target_label: app
        replacement: '$1'
      - source_labels: [__address__]
        regex: '.+:(.+)'
        target_label: port
        replacement: '$1'
      
    # Scrape Orchestration Library
  - job_name: 'orchestration-library'
    metrics_path: /metrics
    static_configs:
      - targets: ['aces-orchestration-api.hiros.svc.cluster.local:80']

