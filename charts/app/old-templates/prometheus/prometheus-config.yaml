apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      # Scrape kube-state-metrics for pod resource metrics
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['{{ .Values.kubeStateMetrics.service.name }}:8080']

      # Scrape kubelet metrics from all nodes
      - job_name: 'kubelet'
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: "node_collector_|kubelet_|node_.*"
            action: keep

      # Scrape metrics from the Kubernetes cAdvisor
      - job_name: 'kubelet-cadvisor'
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: 'container_.*'
            action: keep

      # Scrape metrics from the Kubernetes API server
      - job_name: 'kube-apiserver'
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace]
            action: keep
            regex: 'kube-apiserver;kube-system'

      # Scrape metrics from the Kubernetes controller manager
      - job_name: 'kube-controller-manager'
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace]
            action: keep
            regex: 'kube-controller-manager;kube-system'

      # Scrape metrics from the Kubernetes scheduler
      - job_name: 'kube-scheduler'
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_namespace]
            action: keep
            regex: 'kube-scheduler;kube-system'

      # Scrape metrics from cAdvisor
      - job_name: 'cadvisor'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: cadvisor
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            replacement: $1:8080

      # Scrape node metrics (node_exporter)
      - job_name: 'node'
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_name]
            action: replace
            target_label: instance

{{- if .Values.prometheusScrapeServices }}
{{- range .Values.prometheusScrapeServices }}
      - job_name: '{{ .job_name }}'
{{- if .metrics_path }}
        metrics_path: {{ .metrics_path | quote }}
{{- end }}
{{- if .static_configs }}
        static_configs:
{{ toYaml .static_configs | indent 10 }}
{{- end }}
{{- if .relabel_configs }}
        relabel_configs:
{{ toYaml .relabel_configs | indent 10 }}
{{- end }}
{{- end }}
{{- end }}

    remote_write:
      - url: "http://{{ .Values.prometheusNatsAdapter.service.name }}:5000/receive"
