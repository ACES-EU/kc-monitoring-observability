apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.nginxReverseProxy.configMapName }}
data:
  nginx.conf: |
    server {
        listen {{ .Values.nginxReverseProxy.service.targetPort }};

        location / {
            proxy_pass http://{{ .Values.grafana.service.name }}:{{ .Values.grafana.service.port }}; 
            proxy_set_header X-WEBAUTH-USER autologin_user;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-reverse-proxy
  template:
    metadata:
      labels:
        app: nginx-reverse-proxy
    spec:
      containers:
        - name: nginx
          image: {{ .Values.nginxReverseProxy.image }}
          ports:
            - containerPort: {{ .Values.nginxReverseProxy.service.targetPort }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Values.nginxReverseProxy.configMapName }}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-reverse-proxy
spec:
  selector:
    app: nginx-reverse-proxy
  type: NodePort
  ports:
    - protocol: TCP
      port: {{ .Values.nginxReverseProxy.service.port }}
      targetPort: {{ .Values.nginxReverseProxy.service.targetPort }}
      nodePort: {{ .Values.nginxReverseProxy.service.nodePort }}

