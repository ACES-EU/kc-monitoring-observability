apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
data:
  nats-server.conf: |
    jetstream: {
      store_dir: {{ .Values.nats.jetstream.storeDir | quote }}
      max_mem_store: {{ .Values.nats.jetstream.maxMemStore | quote }}
      max_file_store: {{ .Values.nats.jetstream.maxFileStore | quote }}
    }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nats-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.nats.persistence.size }}
  {{- if .Values.nats.persistence.storageClass }}
  storageClassName: {{ .Values.nats.persistence.storageClass }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-server
  labels:
    app: nats-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-server
  template:
    metadata:
      labels:
        app: nats-server
    spec:
      containers:
        - name: nats
          image: {{ .Values.nats.image }}
          command: [ "nats-server" ]
          args: 
            - "-c"
            - "/etc/nats/nats-server.conf"
          ports:
            - containerPort: {{ .Values.nats.service.ports.client }}
              name: client
            - containerPort: {{ .Values.nats.service.ports.monitor }}
              name: monitor
          volumeMounts:
            - name: nats-config-volume
              mountPath: /etc/nats
            - name: nats-data-volume
              mountPath: {{ .Values.nats.jetstream.storeDir }}
      volumes:
        - name: nats-config-volume
          configMap:
            name: nats-config
        - name: nats-data-volume
          persistentVolumeClaim:
            claimName: nats-data

---

apiVersion: v1
kind: Service
metadata:
  name: nats-server
spec:
  selector:
    app: nats-server
  ports:
    - name: client
      port: {{ .Values.nats.service.ports.client }}
      targetPort: client
    - name: monitor
      port: {{ .Values.nats.service.ports.monitor }}
      targetPort: monitor
